service: sls-oauth

frameworkVersion: ">=1.8.0 <2.0.0"

custom:
  stage: ${opt:stage, "dev1"} # dev1, v1, dev2, v2, etc
  config: ${file(resources/${self:custom.stage}-config.yml)}

provider:
  name: aws
  runtime: nodejs10.x
  memorySize: 128
  timeout: 30
  region: us-east-1
  stage: ${self:custom.stage}
  # Environment Variables
  environment:
    CLIENTID: ${self:custom.config.clientId}
    CLIENTSECRET: ${self:custom.config.clientSecret}
    REDIRECTURL1: ${self:custom.config.redirectUrl1}
    REDIRECTURL2: ${self:custom.config.redirectUrl2}
    RESTRICTTODOMAIN: ${self:custom.config.restrictToDomain}
    # IAM policies
    #iamRoleStatements:
      # none needed yet, may incorporate handle errors later

# layers
layers:
  CommonModules:
    path: layers/CommonModules
    compatibleRuntimes:
      - nodejs10.x
    name: ${self:provider.stage}-oauth-commonModules
    description: "googleapis"
  CustomModules:
    path: layers/CustomModules
    compatibleRuntimes:
      - nodejs10.x
    name: ${self:provider.stage}-oauth-customModules
    description: "createResponseObject errorLogDDB"

# functions: All lambda handlers are in 1 handlers.js file
functions:
  generateauthurl:
    handler: lambdas/handlers.generateauthurl
    description: "APIG/Lambda to generate OAUTH2 Authorization URL"
    layers:
      - {Ref: CommonModulesLambdaLayer}
      - {Ref: CustomModulesLambdaLayer}
    events:
      - http:
          path: /generateauthurl
          method: get
          cors: true
  generatetoken:
    handler: lambdas/handlers.generatetoken
    description: "APIG/Lambda to generate OAUTH2 Authorization URL"
    layers:
      - {Ref: CommonModulesLambdaLayer}
      - {Ref: CustomModulesLambdaLayer}
    events:
      - http:
          path: /generatetoken/
          method: get
          cors: true
  refreshtoken:
    handler: lambdas/handlers.refreshtoken
    description: "APIG/Lambda to refresh OAuth2 access tokens"
    layers:
      - {Ref: CommonModulesLambdaLayer}
      - {Ref: CustomModulesLambdaLayer}
    events:
      - http:
          path: /refreshtoken
          method: get
          cors: true
          querystrings:
            accessToken: true
            refreshToken: true

# you can add packaging information here
package:
 exclude:
   - "*.sample"
 # include:
 #   - include-me.js
 #   - include-me-dir/**
